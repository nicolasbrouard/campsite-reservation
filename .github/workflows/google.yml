# This workflow build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
name: Build and Deploy to GKE

on:
  release:
    types: [ created ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: northamerica-northeast1
  RELEASE_NAME: campsite-reservation
  IMAGE: campsite-reservation

jobs:
  build:
    name: Java build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew bootJar
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: build/libs/*.jar

  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download jar from java build job
        uses: actions/download-artifact@v2
        with:
          name: jar
          path: build/libs/

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Deploy
        run: |-
          helm upgrade --install $RELEASE_NAME src/main/helm --atomic --timeout 10m \
            --set image.repository=gcr.io/$PROJECT_ID/$IMAGE \
            --set image.tag=$GITHUB_SHA
          helm test $RELEASE_NAME